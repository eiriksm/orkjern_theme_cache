<?php

/**
 * @file
 * orkjern_theme_cache.module
 *
 * A drastic way of storing cache. Use on your own risk.
 */

define('ORKJERN_THEME_CACHE_STATE_KEY', 'orkjern_cache.css_cache');
define('ORKJERN_THEME_CACHE_COOKIE_KEY', 'ORKJERN_THEME_CACHE');

/**
 * Implements hook_cache_flush().
 */
function orkjern_theme_cache_cache_flush() {
  \Drupal::state()->set(ORKJERN_THEME_CACHE_STATE_KEY, time());
}

/**
 * Implements hook_preprocess_HOOK().
 */
function orkjern_theme_cache_preprocess_html(&$vars) {
  // Check what the key is.
  $cache_key = \Drupal::state()->get(ORKJERN_THEME_CACHE_STATE_KEY);

  // Add cache key into template.
  $vars['cache_key'] = $cache_key;

  $has_css = FALSE;
  // See if the reverse proxy has used the cache key to append as GET param.
  if (!empty($_GET['has_cache'])) {
    if (!empty($_GET['cookie'])) {
      // Strpos. Really?
      if (strpos($_GET['cookie'], (string) $cache_key) > 1) {
        // All good.
        $has_css = TRUE;
      }
    }
  }
  // This will never be run when behind my varnish, but useful for development.
  if (!empty($_COOKIE) && !empty($_COOKIE[ORKJERN_THEME_CACHE_COOKIE_KEY])) {
    if ($_COOKIE[ORKJERN_THEME_CACHE_COOKIE_KEY] == $cache_key) {
      $has_css = TRUE;
    }
    else {
      setcookie(ORKJERN_THEME_CACHE_COOKIE_KEY);
      unset($_COOKIE);
    }
  }
  if ($has_css) {
    // Comment out this to always get your css on each page load. Useful for
    // development.
    $vars['has_css'] = TRUE;
  }
  $vars['#cache']['contexts'][] = 'cookies:' . ORKJERN_THEME_CACHE_COOKIE_KEY;
}
